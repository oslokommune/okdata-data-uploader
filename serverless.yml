frameworkVersion: ">=2.10.0 <3.0.0"

service: data-uploader

provider:
  name: aws
  runtime: python3.7
  region: ${opt:region, 'eu-west-1'}
  stage: ${opt:stage, 'dev'}
  tracing:
    apiGateway: true
    lambda: true
  deploymentBucket:
    name: ok-origo-dataplatform-config-${self:custom.resolvedStage}
    serverSideEncryption: AES256
  deploymentPrefix: deploy
  environment:
    GIT_REV: ${git:branch}:${git:sha1}
    BUCKET: ok-origo-dataplatform-${self:custom.resolvedStage}
    SERVICE_NAME: ${self:service}
    METADATA_API_URL: ${ssm:/dataplatform/shared/api-gateway-url}/metadata
    AUTHORIZER_API: ${ssm:/dataplatform/shared/api-gateway-url}/simple-dataset-authorizer
    STATUS_API_URL: ${ssm:/dataplatform/shared/api-gateway-url}/status-api/status
    ENABLE_AUTH: true
    CLIENT_ID: data-uploader
  rolePermissionsBoundary: "arn:aws:iam::#{AWS::AccountId}:policy/oslokommune/oslokommune-boundary"
  iamManagedPolicies:
    - "arn:aws:iam::#{AWS::AccountId}:policy/data-uploader-policy"
  tags:
    GIT_REV: ${git:branch}:${git:sha1}

plugins:
  - serverless-aws-documentation
  - serverless-python-requirements
  - serverless-plugin-git-variables
  - serverless-pseudo-parameters
  - serverless-es-logs

resources:
  Description: |
    ${self:service} ${git:branch}:${git:sha1}
    ${git:message}

package:
  exclude:
    - "**/*"
  include:
    - uploader/*.py
    - doc/models/*.json

functions:
  generate_signed_post:
    handler: uploader.generate_signed_post.handler
    timeout: 30
    events:
      - http:
          path: /
          method: post
          cors: true
          authorizer:
            arn: arn:aws:lambda:${self:provider.region}:#{AWS::AccountId}:function:keycloak-authorizer-${self:custom.resolvedStage}-authenticate
            resultTtlInSeconds: 300
            identitySource: method.request.header.Authorization
            identityValidationExpression: "^(b|B)earer [-0-9a-zA-Z\\._]*$"
            type: token
          documentation:
            summary: Generate a signed POST URL
            description: Generates a signed POST URL that a new distribution can be uploaded to
            requestModels:
              "application/json": UploadRequest
            methodResponses:
              - statusCode: "200"
                responseModels:
                  "application/json": UploadResponse
              - statusCode: "400"
                responseModels:
                  "application/json": ErrorResponse
              - statusCode: "403"
                responseModels:
                  "application/json": ErrorResponse
              - statusCode: "500"
                responseModels:
                  "application/json": ErrorResponse
custom:
  pythonRequirements:
    dockerizePip: non-linux
    slim: false
    usePoetry: false
  esLogs:
    endpoint: ${ssm:/dataplatform/shared/logs-elasticsearch-endpoint}
    index: dataplatform-services
    filterPattern: '{ $.function_name = "*" }'
  documentation:
    info:
      title: Data Uploader
      version: 0.0.1
      summary: Data Uploader API
      description: Creates a signed URL and parameters that can be used to POST a file to the S3 upload bucket.
    models:
      - name: UploadRequest
        description: Request to upload a file to S3
        contentType: "application/json"
        schema: ${file(doc/models/uploadRequest.json)}
      - name: UploadResponse
        description: Response object with the presigned post url and parameters to POST to S3
        contentType: "application/json"
        schema: ${file(doc/models/uploadResponse.json)}
      - name: ErrorResponse
        description: Error response
        contentType: "application/json"
        schema: ${file(doc/models/error.json)}
  exportGitVariables: false
  resolvedStage: ${self:custom._stages.${self:provider.stage}, 'dev'}
  _stages:
    prod: prod
    dev: dev
